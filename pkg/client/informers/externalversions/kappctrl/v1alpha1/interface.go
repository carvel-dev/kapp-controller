// Code generated by informer-gen. DO NOT EDIT.

package v1alpha1

import (
	internalinterfaces "github.com/vmware-tanzu/carvel-kapp-controller/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// Apps returns a AppInformer.
	Apps() AppInformer
	// InstalledPkgs returns a InstalledPkgInformer.
	InstalledPkgs() InstalledPkgInformer
	// Pkgs returns a PkgInformer.
	Pkgs() PkgInformer
	// PkgRepositories returns a PkgRepositoryInformer.
	PkgRepositories() PkgRepositoryInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// Apps returns a AppInformer.
func (v *version) Apps() AppInformer {
	return &appInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// InstalledPkgs returns a InstalledPkgInformer.
func (v *version) InstalledPkgs() InstalledPkgInformer {
	return &installedPkgInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// Pkgs returns a PkgInformer.
func (v *version) Pkgs() PkgInformer {
	return &pkgInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// PkgRepositories returns a PkgRepositoryInformer.
func (v *version) PkgRepositories() PkgRepositoryInformer {
	return &pkgRepositoryInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
