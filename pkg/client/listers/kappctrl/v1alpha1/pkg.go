// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/vmware-tanzu/carvel-kapp-controller/pkg/apis/kappctrl/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PkgLister helps list Pkgs.
type PkgLister interface {
	// List lists all Pkgs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Pkg, err error)
	// Pkgs returns an object that can list and get Pkgs.
	Pkgs(namespace string) PkgNamespaceLister
	PkgListerExpansion
}

// pkgLister implements the PkgLister interface.
type pkgLister struct {
	indexer cache.Indexer
}

// NewPkgLister returns a new PkgLister.
func NewPkgLister(indexer cache.Indexer) PkgLister {
	return &pkgLister{indexer: indexer}
}

// List lists all Pkgs in the indexer.
func (s *pkgLister) List(selector labels.Selector) (ret []*v1alpha1.Pkg, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Pkg))
	})
	return ret, err
}

// Pkgs returns an object that can list and get Pkgs.
func (s *pkgLister) Pkgs(namespace string) PkgNamespaceLister {
	return pkgNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PkgNamespaceLister helps list and get Pkgs.
type PkgNamespaceLister interface {
	// List lists all Pkgs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Pkg, err error)
	// Get retrieves the Pkg from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Pkg, error)
	PkgNamespaceListerExpansion
}

// pkgNamespaceLister implements the PkgNamespaceLister
// interface.
type pkgNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Pkgs in the indexer for a given namespace.
func (s pkgNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Pkg, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Pkg))
	})
	return ret, err
}

// Get retrieves the Pkg from the indexer for a given namespace and name.
func (s pkgNamespaceLister) Get(name string) (*v1alpha1.Pkg, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pkg"), name)
	}
	return obj.(*v1alpha1.Pkg), nil
}
