
// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package github.com.vmware_tanzu.carvel_kapp_controller.pkg.apiserver.apis.datapackaging.v1alpha1;

import "github.com/vmware-tanzu/carvel-kapp-controller/pkg/apis/kappctrl/v1alpha1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "github.com/vmware-tanzu/carvel-kapp-controller/pkg/apiserver/apis/datapackaging/v1alpha1";

message AppTemplateSpec {
  optional github.com.vmware_tanzu.carvel_kapp_controller.pkg.apis.kappctrl.v1alpha1.AppSpec spec = 1;
}

// IncludedSoftware contains the underlying Software Contents of a Package
message IncludedSoftware {
  optional string displayName = 1;

  optional string version = 2;

  optional string description = 3;
}

message Maintainer {
  optional string name = 1;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message Package {
  // Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PackageSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PackageList {
  // Standard list metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Package items = 2;
}

// +genclient
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PackageMetadata {
  // Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PackageMetadataSpec spec = 2;
}

// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
message PackageMetadataList {
  // Standard list metadata.
  // More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  // +optional
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated PackageMetadata items = 2;
}

message PackageMetadataSpec {
  optional string displayName = 1;

  optional string longDescription = 2;

  optional string shortDescription = 3;

  optional string iconSVGBase64 = 4;

  optional string providerName = 5;

  repeated Maintainer maintainers = 6;

  repeated string categories = 7;

  optional string supportDescription = 8;
}

message PackageSpec {
  optional string refName = 1;

  optional string version = 2;

  repeated string licenses = 3;

  // +optional
  // +nullable
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time releasedAt = 4;

  optional string capacityRequirementsDescription = 5;

  optional string releaseNotes = 6;

  optional AppTemplateSpec template = 7;

  // valuesSchema can be used to show template values that
  // can be configured by users when a Package is installed
  // in an OpenAPI schema format.
  // +optional
  optional ValuesSchema valuesSchema = 8;

  // IncludedSoftware can be used to show the software contents of a Package.
  // This is especially useful if the underlying versions do not match the Package version
  // +optional
  repeated IncludedSoftware includedSoftware = 9;

  // KappControllerVersionSelection specifies the versions of kapp-controller which can install this package
  // +optional
  optional VersionSelection kappControllerVersionSelection = 10;

  // KubernetesVersionSelection specifies the versions of k8s which this package can be installed on
  // +optional
  optional VersionSelection kubernetesVersionSelection = 11;
}

message ValuesSchema {
  // +optional
  // +nullable
  // +kubebuilder:pruning:PreserveUnknownFields
  optional k8s.io.apimachinery.pkg.runtime.RawExtension openAPIv3 = 1;
}

// VersionSelection provides version range constraints but will always accept prereleases
message VersionSelection {
  optional string constraints = 1;
}

