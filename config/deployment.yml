#@ load("@ytt:data", "data")

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kapp-controller
  namespace: #@ data.values.namespace
  annotations:
    kapp-controller.carvel.dev/version: #@ data.values.kapp_controller_version
spec:
  selector:
    matchLabels:
      app: kapp-controller
  replicas: 1
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: kapp-controller
    spec:
      serviceAccount: kapp-controller-sa
      containers:
      - name: kapp-controller
        image: kapp-controller
        args:
        - #@ "-packaging-global-namespace={}".format(data.values.packaging_global_namespace)
        #@ if/end data.values.dangerous_enable_pprof:
        - -dangerous-enable-pprof=true
        - #@ "-enable-api-priority-and-fairness={}".format(data.values.enable_api_priority_and_fairness)
        env:
        - name: KAPPCTRL_MEM_TMP_DIR
          value: /etc/kappctrl-mem-tmp
        - name: KAPPCTRL_SIDECAREXEC_SOCK
          value: /etc/kappctrl-mem-tmp/sidecarexec.sock
        - name: KAPPCTRL_SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAPPCTRL_API_PORT
          value: #@ str(data.values.api_port)
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
        volumeMounts:
        - name: template-fs
          mountPath: /etc/kappctrl-mem-tmp
        - name: home
          mountPath: /home/kapp-controller
        ports:
        - containerPort: #@ data.values.api_port
          name: api
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          capabilities:
            drop:
            - all
      - name: kapp-controller-sidecarexec
        image: kapp-controller
        command: ["/kapp-controller-sidecarexec"]
        resources:
          requests:
            cpu: 120m
            memory: 100Mi
        env:
        - name: KAPPCTRL_SIDECAREXEC_SOCK
          value: /etc/kappctrl-mem-tmp/sidecarexec.sock
        volumeMounts:
        - name: template-fs
          mountPath: /etc/kappctrl-mem-tmp
        - name: home
          mountPath: /home/kapp-controller
        #! mount over service account token to make it not available
        - name: empty-sa
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false #! TODO(bmo): don't write to the root ca-bundle
          runAsNonRoot: true
          capabilities:
            drop:
            - all
      volumes:
      - name: template-fs
        emptyDir:
          medium: Memory
      - name: home
        emptyDir:
          medium: Memory
      - name: empty-sa
        emptyDir: {}

#@ if/end data.values.dangerous_enable_pprof:
---
apiVersion: v1
kind: Service
metadata:
  name: pprof
  namespace: #@ data.values.namespace
spec:
  type: NodePort
  selector:
    app: kapp-controller
  ports:
  - port: 6060
    protocol: TCP
