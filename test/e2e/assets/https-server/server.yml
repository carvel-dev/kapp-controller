---
apiVersion: v1
kind: Namespace
metadata:
  name: https-server
---
apiVersion: v1
kind: Service
metadata:
  namespace: https-server
  name: https-svc
  annotations:
    kapp.k14s.io/change-group: server
spec:
  selector:
    app: self-signed-https-server
  ports:
  - port: 443
    targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: self-signed-https-server
  namespace: https-server
  annotations:
    kapp.k14s.io/change-group: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  self-signed-https-server
  template:
    metadata:
      labels:
        app: self-signed-https-server
    spec:
      containers:
      - name: self-signed-https-server
        image: nginx
        ports:
        - containerPort: 443
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /deployment.yml
            port: 443
          # give some time to start up otherwise clients will flake
          initialDelaySeconds: 5
          periodSeconds: 1
        volumeMounts:
        - mountPath: /www/data
          name: data
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /etc/ssl
          readOnly: true
          name: nginx-certs
      volumes:
      - name: data
        configMap:
          name: nginx-data
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-certs
        secret:
          secretName: nginx-certs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: https-server
data:
  nginx.conf: |
    events {
      worker_connections  1024;  ## Default: 1024
    }

    http {
      server {
        listen 443;

        ssl on;
        ssl_certificate /etc/ssl/https-server.crt;
        ssl_certificate_key /etc/ssl/https-server.key;
        server_name https-svc.default.svc.cluster.local;

        location / {
          root /www/data;
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-data
  namespace: https-server
data:
  deployment.yml: |
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: http-server-returned-cm
    data:
      content: http-server-returned-content

# TODO should we make vendir's http retry within App CR, to avoid
# transient failure when Service=>Deployment networking is not ready?
---
apiVersion: batch/v1
kind: Job
metadata:
  name: check-nginx-conn
  namespace: default
  annotations:
    kapp.k14s.io/update-strategy: always-replace
    kapp.k14s.io/change-rule: upsert after upserting server
spec:
  backoffLimit: 0
  template:
    metadata:
      name: check-nginx-conn
    spec:
      containers:
      - name: check
        image: busybox
        command:
        - /bin/sh
        - "-c"
        - |
          wget --tries=10 --no-check-certificate https://https-svc.https-server.svc.cluster.local/deployment.yml
      restartPolicy: Never
