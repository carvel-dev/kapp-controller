---
apiVersion: v1
kind: Namespace
metadata:
  name: https-server
---
apiVersion: v1
kind: Service
metadata:
  namespace: https-server
  name: https-svc
spec:
  selector:
    app: self-signed-https-server
  ports:
  - port: 443
    targetPort: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: self-signed-https-server
  namespace: https-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app:  self-signed-https-server
  template:
    metadata:
      labels:
        app: self-signed-https-server
    spec:
      containers:
      - name: self-signed-https-server
        image: nginx
        ports:
        - containerPort: 443
        volumeMounts:
        - mountPath: /www/data
          name: data
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-conf
        - mountPath: /etc/ssl
          readOnly: true
          name: nginx-certs
      volumes:
      - name: data
        configMap:
          name: nginx-data
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-certs
        secret:
          secretName: nginx-certs
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: https-server
data:
  nginx.conf: |
    events {
      worker_connections  1024;  ## Default: 1024
    }

    http {
      server {
        listen 443;

        ssl on;
        ssl_certificate /etc/ssl/https-server.crt;
        ssl_certificate_key /etc/ssl/https-server.key;
        server_name https-svc.default.svc.cluster.local;

        location / {
          root /www/data;
        }
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-data
  namespace: https-server
data:
  deployment.yml: |
    ---
    apiVersion: v1
    kind: Service
    metadata:
      namespace: default
      name: simple-app
    spec:
      ports:
      - port: 80
        targetPort: 80
      selector:
        simple-app: ""
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      namespace: default
      name: simple-app
    spec:
      selector:
        matchLabels:
          simple-app: ""
      template:
        metadata:
          labels:
            simple-app: ""
        spec:
          containers:
          - name: simple-app
            image: docker.io/dkalinin/k8s-simple-app@sha256:4c8b96d4fffdfae29258d94a22ae4ad1fe36139d47288b8960d9958d1e63a9d0
            env:
            - name: HELLO_MSG
              value: stranger
---
apiVersion: v1
kind: Secret
metadata:
  name: nginx-certs
  namespace: https-server
type: Opaque
stringData:
  # Certs and key in this secret generated for `https-svc.https-server.svc.cluster.local` using the bosh cli.
  # The second cert in the `https-server.crt` cert chain must match the ca cert in config-test/config-map.yml
  # or tests will fail.

  # Bosh cli config used:
  #
  # ---
  # variables:
  # - name: ca_cert
  #   type: certificate
  #   options:
  #     is_ca: true
  #     common_name: generated-ca
  # - name: server_certs
  #   type: certificate
  #   options:
  #     ca: ca_cert
  #     common_name: https-svc.https-server.svc.cluster.local

  https-server.crt: |
    -----BEGIN CERTIFICATE-----
    MIIEkTCCAvmgAwIBAgIRAO4xi9GPlZ4tE6/8NSyJFHYwDQYJKoZIhvcNAQELBQAw
    ODEMMAoGA1UEBhMDVVNBMRYwFAYDVQQKEw1DbG91ZCBGb3VuZHJ5MRAwDgYDVQQD
    Ewdib3NoLWNhMB4XDTIwMTIyMzE2NTkwMloXDTIxMTIyMzE2NTkwMlowWTEMMAoG
    A1UEBhMDVVNBMRYwFAYDVQQKEw1DbG91ZCBGb3VuZHJ5MTEwLwYDVQQDEyhodHRw
    cy1zdmMuaHR0cHMtc2VydmVyLnN2Yy5jbHVzdGVyLmxvY2FsMIIBojANBgkqhkiG
    9w0BAQEFAAOCAY8AMIIBigKCAYEAm+H+Qys3UqstleDpEKDtKf3PIaob8QlhZiK+
    z9HGZamo1RDeQx4t7zM2BzzPdHzMlSAJSqlgiItIbmkQQebRWjo6xLw9OF65CHoR
    KRNuOq4UXs8aOEd1dt+/OgGPKsJsIUMzy+9J6VqYf0vzlLxABadWr4XJok0JFvMS
    pe2LJ1McQsNiFGlIiXIB7mgotdma79Ya6kivgQ+US6ePjBz2ir78ReB91r0dD+j8
    2MSiq6PWElty34VqCcPdzbXPtRz5j4XptFsts0VgOvJ+OlwYE7P2M0+qO/R5ofll
    TRZKZvfnENoykLz3Z2kptcubvvket9LnsBQODfroCd/ei/IxxGAUs2jzPqDzHs7e
    Zdujz4Sbj2ybzcF+7ZmLfiNr4g9DTV2NeEXoY6I6m9dYtfoBsaRs96mAsup85qlj
    vzJOELK9CFL7wOhZLYPlerYeEvd0CtpLJ0RVypUuESh99v6fPbVVWdEEWRWHNels
    qCyaofDe1Vph1Nf3sqcqT1QmEylTAgMBAAGjdTBzMA4GA1UdDwEB/wQEAwIFoDAT
    BgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMB0GA1UdDgQWBBQoo/dy
    rTnapu5oBldSIusAKBWhVjAfBgNVHSMEGDAWgBQ8EaZiCmGb65SqkTrrNgHuoEip
    AzANBgkqhkiG9w0BAQsFAAOCAYEACd5rWOV1DAIbZSQCqfhEEsTMPCyxc/p347eS
    sH63gyo7NDKcqHgo2XEfm2Cp/wbQmRjq7I8OV6e41dZrtEQzq1iXto01M/s4ssQk
    7agDED9+TFSYtRdnWdBre1m9WOECcjw3n2wniLlhMwU2FmBEYc0eDToDUOcWLO+b
    V/wp1ovtJiRY3VhXkKqgkiQnqYQ80Q7DDjZ5deM0Ezk5KJPL6Gg+wwhWCGVnHCxM
    wCji7NhZ8XN05b6169haKB4xOnwBWOUaIry8EujAOXiAnYNRpigO9l/isRfbe4H7
    V7Wvgn9YPPpLLijZ+Ds0fRHCMuHJ4BGjGEe8PrgAYoHIH+iYZhbRbWnbo29vo+cg
    2e3lpie4i+fv0xLqHsGJ5tu5jBwJHntJpljDr6fQf4uaujZaQsj0BFmbukbL8z9n
    pqUFdQZZ4aap8mzy5q9u6PlMQPbIq1bWqKom4i7hrrFqWBByXlHDiv6kGOuZ33eM
    NH20TiArDOCZoizBKVGHP666OWQJ
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIEXTCCAsWgAwIBAgIQDqAvoGhrmyB/EvhjT/efWzANBgkqhkiG9w0BAQsFADA4
    MQwwCgYDVQQGEwNVU0ExFjAUBgNVBAoTDUNsb3VkIEZvdW5kcnkxEDAOBgNVBAMT
    B2Jvc2gtY2EwHhcNMjAxMjIzMTY1OTAxWhcNMjExMjIzMTY1OTAxWjA4MQwwCgYD
    VQQGEwNVU0ExFjAUBgNVBAoTDUNsb3VkIEZvdW5kcnkxEDAOBgNVBAMTB2Jvc2gt
    Y2EwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIBgQCsMTj5yHLez8jzONu1
    tv+u0dqzt8UdWCtUtHCDkIiNJIcB3PkGG7x/LvZ0bMydWeFcBq0g15tfG6N6vHnF
    4p2E9nSe0XjEEnxEkmtdpoFVPZdHTBgc6H5LOMshPH1ARWpuvBnDb87oVinIZBaf
    7BjhUQcRoGtsomk/R9Ke9FB4rMZUfuY/7CC8lDyP5Y02VeTAUimK6/WfDh3VPB3e
    vQfXKJY0Ba5s43fIdudV+fcuKDut01oKmiBL6IHLRSrZKta5mg4fgimst6nJ4xvU
    SWqYWS4yMxf6pOrTHPjbKUqXqbK4Reh+oQoE12WJZ3NvXr1GoDzt1xzTNzUpUVws
    nQm5Fo9H07mkjKeu8gOrOBQ2FqaK+eZ5FFNV7kToVQj2KVTEbLLcTrF454jhsoSd
    EOlqVUjtfxGz0dGEuy+IgMvSSjtky7eI08jdBWMiOThQvR3n0Q6TXF/wBwCEfgDa
    4eVeziaUGPXUsefR2+2ZCQ6Z31SmtUGECciCKmKtZTekKCUCAwEAAaNjMGEwDgYD
    VR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFDwRpmIKYZvr
    lKqROus2Ae6gSKkDMB8GA1UdIwQYMBaAFDwRpmIKYZvrlKqROus2Ae6gSKkDMA0G
    CSqGSIb3DQEBCwUAA4IBgQA/LX15Qb7v/og06XB27TPl9StGBiewrb0WdHEz9H16
    eN926TwxWKUr6QcbGg6UbNfLUfMC3VicCDMTQCSNhBTUXm+4pKcJsTyM9/Sk/e4U
    5+l3FTgxXs+3mEoYJy16QlkU1XDr1q6Myo9Kc38d1yUW9OPxBV4Ur3+12uk5ElSC
    jZu7l+ox2FLds1TmYBhRR/2Jdbm5aoamh4FVpkmDgGedjERREymvnOIMkhWyUfWE
    L8Sxa2d8427cBieiEP4foLgjWKr2+diCDrBymU/pz/ZMRRpvUc2uFV005/vmDedK
    xQACQ8ZWBYWzNCV4C0Y5AS1PETxbocZ09Yw6K1XyVveEp8aQ/ROMkAUOObhMD45W
    GZNwewGU/V7kclDgMwq6R1VXr5R7NtK9V96vi6ZaujoJKvF1PFpZ/IHWcfFkpVoy
    Fu8L5PIkg4weBW+87kp+CCseEXPUplpqQCAnmVJdvilK6vgKc7T+vzbET8LNw7NX
    mHOVA3CR2w+yUhN4uiCI1aY=
    -----END CERTIFICATE-----
  https-server.key: |
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----
